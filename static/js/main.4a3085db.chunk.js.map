{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","selectedPostId","setSelectedPostId","posts","className","map","post","userId","id","type","onClick","BASE_URL","getUsers","a","fetch","response","json","getPostComments","postId","getUserPosts","getPostDetails","NewCommentForm","name","placeholder","PostDetails","useState","postDetails","setPostDetails","postComments","setPostComments","loadPostDetails","postDetailsFromServer","useEffect","loadPostComments","commentsFromServer","title","length","comment","body","App","users","setUsers","currentUserId","setCurrentUserId","setPosts","getUsersFromServer","usersFromServer","getPostsFromServer","postsFromServer","onChange","event","target","value","user","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a3085db.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  selectedPostId: number | null;\n  setSelectedPostId: (id: number) => void;\n  posts: Post[] | null;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedPostId,\n  setSelectedPostId,\n  posts,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts?.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              sunt aut facere repellat provident occaecati excepturi optio\n            </div>\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"\n                    PostsList__button\n                    button\"\n                  onClick={() => setSelectedPostId(0)}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setSelectedPostId(post.id)}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getUsers = async () => {\n  const response = await fetch(`${BASE_URL}/users/`);\n\n  return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async (userId: number) => {\n  let response;\n\n  if (userId === 0) {\n    response = await fetch(`${BASE_URL}/posts/`);\n  } else {\n    response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n  }\n\n  return response.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm: React.FC = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n  // filteredPost: Post | null;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPostId,\n  // filteredPost,\n}) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n\n  const loadPostDetails = async () => {\n    try {\n      let postDetailsFromServer;\n\n      if (selectedPostId) {\n        postDetailsFromServer = await getPostDetails(selectedPostId);\n      }\n\n      setPostDetails(postDetailsFromServer);\n    } catch {\n      setPostDetails(null);\n    }\n  };\n\n  useEffect(\n    () => {\n      loadPostDetails();\n    },\n    [selectedPostId],\n  );\n\n  const loadPostComments = async () => {\n    try {\n      const commentsFromServer = await getPostComments(selectedPostId);\n\n      setPostComments(commentsFromServer);\n    } catch {\n      setPostComments([]);\n    }\n  };\n\n  useEffect(\n    () => {\n      loadPostComments();\n    },\n    [selectedPostId],\n  );\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {postDetails && (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{postDetails.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button type=\"button\" className=\"button\">\n              {`Hide ${postComments.length} comments`}\n            </button>\n\n            <ul className=\"PostDetails__list\">\n              {postComments.map((comment: Comment) => (\n                <li\n                  key={comment.id}\n                  className=\"PostDetails__list-item\"\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm />\n            </div>\n          </section>\n        </>\n      )}\n\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/api';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[] | null>([]);\n  const [currentUserId, setCurrentUserId] = useState(7);\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n  const [posts, setPosts] = useState<Post[] | null>([]);\n  // const [filteredPost, setFilteredPost] = useState<Post | null>(null);\n\n  const getUsersFromServer = async () => {\n    try {\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    } catch {\n      setUsers([]);\n    }\n  };\n\n  useEffect(\n    () => {\n      getUsersFromServer();\n    },\n    [],\n  );\n\n  const getPostsFromServer = async () => {\n    try {\n      const postsFromServer = await getUserPosts(currentUserId);\n\n      setPosts(postsFromServer);\n    } catch {\n      setPosts([]);\n    }\n  };\n\n  useEffect(\n    () => {\n      getPostsFromServer();\n    },\n    [currentUserId],\n  );\n\n  // useEffect(\n  //   () => {\n  //     const filterPost = posts?.filter(postDet => (\n  //       postDet.id === selectedPostId\n  //     ))[0];\n\n  //     if (filterPost) {\n  //       setFilteredPost(filterPost);\n  //     }\n  //   },\n  //   [selectedPostId],\n  // );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => setCurrentUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users?.map((user, index) => {\n              // there were 1307 users in the API so I limitted to 10\n              if (index < 10) {\n                return (\n                  <option\n                    key={user.id}\n                    value={user.id}\n                  >\n                    {user.name}\n                  </option>\n                );\n              }\n\n              return null;\n            })}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            posts={posts}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n            // filteredPost={filteredPost}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}